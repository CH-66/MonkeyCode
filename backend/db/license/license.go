// Code generated by ent, DO NOT EDIT.

package license

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label 定义数据库中 license 表的标签名称
	Label = "license"
	// FieldID 定义数据库中 id 字段的名称
	FieldID = "id"
	// FieldType 定义数据库中 type 字段的名称
	FieldType = "type"
	// FieldData 定义数据库中 data 字段的名称
	FieldData = "data"
	// FieldCode 定义数据库中 code 字段的名称
	FieldCode = "code"
	// FieldCreatedAt 定义数据库中 created_at 字段的名称
	FieldCreatedAt = "created_at"
	// Table 定义数据库中 license 表的名称
	Table = "license"
)

// Columns 包含 license 表的所有字段名称
var Columns = []string{
	FieldID,
	FieldType,
	FieldData,
	FieldCode,
	FieldCreatedAt,
}

// ValidColumn 检查给定的列名是否为有效的 license 表字段
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt 定义 created_at 字段在创建时的默认值生成函数
	DefaultCreatedAt func() time.Time
	// IDValidator 是 id 字段的验证器，在保存前由构建器调用
	IDValidator func(int) error
)

// OrderOption 定义 License 查询的排序选项
type OrderOption func(*sql.Selector)

// ByID 按 id 字段对结果进行排序
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByType 按 type 字段对结果进行排序
func ByType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldType, opts...).ToFunc()
}

// ByCode 按 code 字段对结果进行排序
func ByCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCode, opts...).ToFunc()
}

// ByCreatedAt 按 created_at 字段对结果进行排序
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
