// Code generated by ent, DO NOT EDIT.

package securityscanningresult

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/chaitin/MonkeyCode/backend/db/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldID, id))
}

// SecurityScanningID applies equality check predicate on the "security_scanning_id" field. It's identical to SecurityScanningIDEQ.
func SecurityScanningID(v uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldSecurityScanningID, v))
}

// CheckID applies equality check predicate on the "check_id" field. It's identical to CheckIDEQ.
func CheckID(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldCheckID, v))
}

// EngineKind applies equality check predicate on the "engine_kind" field. It's identical to EngineKindEQ.
func EngineKind(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldEngineKind, v))
}

// Lines applies equality check predicate on the "lines" field. It's identical to LinesEQ.
func Lines(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldLines, v))
}

// Path applies equality check predicate on the "path" field. It's identical to PathEQ.
func Path(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldPath, v))
}

// Message applies equality check predicate on the "message" field. It's identical to MessageEQ.
func Message(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldMessage, v))
}

// MessageZh applies equality check predicate on the "message_zh" field. It's identical to MessageZhEQ.
func MessageZh(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldMessageZh, v))
}

// Severity applies equality check predicate on the "severity" field. It's identical to SeverityEQ.
func Severity(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldSeverity, v))
}

// AbstractEn applies equality check predicate on the "abstract_en" field. It's identical to AbstractEnEQ.
func AbstractEn(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldAbstractEn, v))
}

// AbstractZh applies equality check predicate on the "abstract_zh" field. It's identical to AbstractZhEQ.
func AbstractZh(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldAbstractZh, v))
}

// CategoryEn applies equality check predicate on the "category_en" field. It's identical to CategoryEnEQ.
func CategoryEn(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldCategoryEn, v))
}

// CategoryZh applies equality check predicate on the "category_zh" field. It's identical to CategoryZhEQ.
func CategoryZh(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldCategoryZh, v))
}

// Confidence applies equality check predicate on the "confidence" field. It's identical to ConfidenceEQ.
func Confidence(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldConfidence, v))
}

// Impact applies equality check predicate on the "impact" field. It's identical to ImpactEQ.
func Impact(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldImpact, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldCreatedAt, v))
}

// SecurityScanningIDEQ applies the EQ predicate on the "security_scanning_id" field.
func SecurityScanningIDEQ(v uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldSecurityScanningID, v))
}

// SecurityScanningIDNEQ applies the NEQ predicate on the "security_scanning_id" field.
func SecurityScanningIDNEQ(v uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldSecurityScanningID, v))
}

// SecurityScanningIDIn applies the In predicate on the "security_scanning_id" field.
func SecurityScanningIDIn(vs ...uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldSecurityScanningID, vs...))
}

// SecurityScanningIDNotIn applies the NotIn predicate on the "security_scanning_id" field.
func SecurityScanningIDNotIn(vs ...uuid.UUID) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldSecurityScanningID, vs...))
}

// CheckIDEQ applies the EQ predicate on the "check_id" field.
func CheckIDEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldCheckID, v))
}

// CheckIDNEQ applies the NEQ predicate on the "check_id" field.
func CheckIDNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldCheckID, v))
}

// CheckIDIn applies the In predicate on the "check_id" field.
func CheckIDIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldCheckID, vs...))
}

// CheckIDNotIn applies the NotIn predicate on the "check_id" field.
func CheckIDNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldCheckID, vs...))
}

// CheckIDGT applies the GT predicate on the "check_id" field.
func CheckIDGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldCheckID, v))
}

// CheckIDGTE applies the GTE predicate on the "check_id" field.
func CheckIDGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldCheckID, v))
}

// CheckIDLT applies the LT predicate on the "check_id" field.
func CheckIDLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldCheckID, v))
}

// CheckIDLTE applies the LTE predicate on the "check_id" field.
func CheckIDLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldCheckID, v))
}

// CheckIDContains applies the Contains predicate on the "check_id" field.
func CheckIDContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldCheckID, v))
}

// CheckIDHasPrefix applies the HasPrefix predicate on the "check_id" field.
func CheckIDHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldCheckID, v))
}

// CheckIDHasSuffix applies the HasSuffix predicate on the "check_id" field.
func CheckIDHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldCheckID, v))
}

// CheckIDEqualFold applies the EqualFold predicate on the "check_id" field.
func CheckIDEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldCheckID, v))
}

// CheckIDContainsFold applies the ContainsFold predicate on the "check_id" field.
func CheckIDContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldCheckID, v))
}

// EngineKindEQ applies the EQ predicate on the "engine_kind" field.
func EngineKindEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldEngineKind, v))
}

// EngineKindNEQ applies the NEQ predicate on the "engine_kind" field.
func EngineKindNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldEngineKind, v))
}

// EngineKindIn applies the In predicate on the "engine_kind" field.
func EngineKindIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldEngineKind, vs...))
}

// EngineKindNotIn applies the NotIn predicate on the "engine_kind" field.
func EngineKindNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldEngineKind, vs...))
}

// EngineKindGT applies the GT predicate on the "engine_kind" field.
func EngineKindGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldEngineKind, v))
}

// EngineKindGTE applies the GTE predicate on the "engine_kind" field.
func EngineKindGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldEngineKind, v))
}

// EngineKindLT applies the LT predicate on the "engine_kind" field.
func EngineKindLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldEngineKind, v))
}

// EngineKindLTE applies the LTE predicate on the "engine_kind" field.
func EngineKindLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldEngineKind, v))
}

// EngineKindContains applies the Contains predicate on the "engine_kind" field.
func EngineKindContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldEngineKind, v))
}

// EngineKindHasPrefix applies the HasPrefix predicate on the "engine_kind" field.
func EngineKindHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldEngineKind, v))
}

// EngineKindHasSuffix applies the HasSuffix predicate on the "engine_kind" field.
func EngineKindHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldEngineKind, v))
}

// EngineKindEqualFold applies the EqualFold predicate on the "engine_kind" field.
func EngineKindEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldEngineKind, v))
}

// EngineKindContainsFold applies the ContainsFold predicate on the "engine_kind" field.
func EngineKindContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldEngineKind, v))
}

// LinesEQ applies the EQ predicate on the "lines" field.
func LinesEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldLines, v))
}

// LinesNEQ applies the NEQ predicate on the "lines" field.
func LinesNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldLines, v))
}

// LinesIn applies the In predicate on the "lines" field.
func LinesIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldLines, vs...))
}

// LinesNotIn applies the NotIn predicate on the "lines" field.
func LinesNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldLines, vs...))
}

// LinesGT applies the GT predicate on the "lines" field.
func LinesGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldLines, v))
}

// LinesGTE applies the GTE predicate on the "lines" field.
func LinesGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldLines, v))
}

// LinesLT applies the LT predicate on the "lines" field.
func LinesLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldLines, v))
}

// LinesLTE applies the LTE predicate on the "lines" field.
func LinesLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldLines, v))
}

// LinesContains applies the Contains predicate on the "lines" field.
func LinesContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldLines, v))
}

// LinesHasPrefix applies the HasPrefix predicate on the "lines" field.
func LinesHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldLines, v))
}

// LinesHasSuffix applies the HasSuffix predicate on the "lines" field.
func LinesHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldLines, v))
}

// LinesEqualFold applies the EqualFold predicate on the "lines" field.
func LinesEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldLines, v))
}

// LinesContainsFold applies the ContainsFold predicate on the "lines" field.
func LinesContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldLines, v))
}

// PathEQ applies the EQ predicate on the "path" field.
func PathEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldPath, v))
}

// PathNEQ applies the NEQ predicate on the "path" field.
func PathNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldPath, v))
}

// PathIn applies the In predicate on the "path" field.
func PathIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldPath, vs...))
}

// PathNotIn applies the NotIn predicate on the "path" field.
func PathNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldPath, vs...))
}

// PathGT applies the GT predicate on the "path" field.
func PathGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldPath, v))
}

// PathGTE applies the GTE predicate on the "path" field.
func PathGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldPath, v))
}

// PathLT applies the LT predicate on the "path" field.
func PathLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldPath, v))
}

// PathLTE applies the LTE predicate on the "path" field.
func PathLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldPath, v))
}

// PathContains applies the Contains predicate on the "path" field.
func PathContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldPath, v))
}

// PathHasPrefix applies the HasPrefix predicate on the "path" field.
func PathHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldPath, v))
}

// PathHasSuffix applies the HasSuffix predicate on the "path" field.
func PathHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldPath, v))
}

// PathEqualFold applies the EqualFold predicate on the "path" field.
func PathEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldPath, v))
}

// PathContainsFold applies the ContainsFold predicate on the "path" field.
func PathContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldPath, v))
}

// MessageEQ applies the EQ predicate on the "message" field.
func MessageEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldMessage, v))
}

// MessageNEQ applies the NEQ predicate on the "message" field.
func MessageNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldMessage, v))
}

// MessageIn applies the In predicate on the "message" field.
func MessageIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldMessage, vs...))
}

// MessageNotIn applies the NotIn predicate on the "message" field.
func MessageNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldMessage, vs...))
}

// MessageGT applies the GT predicate on the "message" field.
func MessageGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldMessage, v))
}

// MessageGTE applies the GTE predicate on the "message" field.
func MessageGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldMessage, v))
}

// MessageLT applies the LT predicate on the "message" field.
func MessageLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldMessage, v))
}

// MessageLTE applies the LTE predicate on the "message" field.
func MessageLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldMessage, v))
}

// MessageContains applies the Contains predicate on the "message" field.
func MessageContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldMessage, v))
}

// MessageHasPrefix applies the HasPrefix predicate on the "message" field.
func MessageHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldMessage, v))
}

// MessageHasSuffix applies the HasSuffix predicate on the "message" field.
func MessageHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldMessage, v))
}

// MessageEqualFold applies the EqualFold predicate on the "message" field.
func MessageEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldMessage, v))
}

// MessageContainsFold applies the ContainsFold predicate on the "message" field.
func MessageContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldMessage, v))
}

// MessageZhEQ applies the EQ predicate on the "message_zh" field.
func MessageZhEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldMessageZh, v))
}

// MessageZhNEQ applies the NEQ predicate on the "message_zh" field.
func MessageZhNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldMessageZh, v))
}

// MessageZhIn applies the In predicate on the "message_zh" field.
func MessageZhIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldMessageZh, vs...))
}

// MessageZhNotIn applies the NotIn predicate on the "message_zh" field.
func MessageZhNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldMessageZh, vs...))
}

// MessageZhGT applies the GT predicate on the "message_zh" field.
func MessageZhGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldMessageZh, v))
}

// MessageZhGTE applies the GTE predicate on the "message_zh" field.
func MessageZhGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldMessageZh, v))
}

// MessageZhLT applies the LT predicate on the "message_zh" field.
func MessageZhLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldMessageZh, v))
}

// MessageZhLTE applies the LTE predicate on the "message_zh" field.
func MessageZhLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldMessageZh, v))
}

// MessageZhContains applies the Contains predicate on the "message_zh" field.
func MessageZhContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldMessageZh, v))
}

// MessageZhHasPrefix applies the HasPrefix predicate on the "message_zh" field.
func MessageZhHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldMessageZh, v))
}

// MessageZhHasSuffix applies the HasSuffix predicate on the "message_zh" field.
func MessageZhHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldMessageZh, v))
}

// MessageZhEqualFold applies the EqualFold predicate on the "message_zh" field.
func MessageZhEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldMessageZh, v))
}

// MessageZhContainsFold applies the ContainsFold predicate on the "message_zh" field.
func MessageZhContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldMessageZh, v))
}

// SeverityEQ applies the EQ predicate on the "severity" field.
func SeverityEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldSeverity, v))
}

// SeverityNEQ applies the NEQ predicate on the "severity" field.
func SeverityNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldSeverity, v))
}

// SeverityIn applies the In predicate on the "severity" field.
func SeverityIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldSeverity, vs...))
}

// SeverityNotIn applies the NotIn predicate on the "severity" field.
func SeverityNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldSeverity, vs...))
}

// SeverityGT applies the GT predicate on the "severity" field.
func SeverityGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldSeverity, v))
}

// SeverityGTE applies the GTE predicate on the "severity" field.
func SeverityGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldSeverity, v))
}

// SeverityLT applies the LT predicate on the "severity" field.
func SeverityLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldSeverity, v))
}

// SeverityLTE applies the LTE predicate on the "severity" field.
func SeverityLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldSeverity, v))
}

// SeverityContains applies the Contains predicate on the "severity" field.
func SeverityContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldSeverity, v))
}

// SeverityHasPrefix applies the HasPrefix predicate on the "severity" field.
func SeverityHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldSeverity, v))
}

// SeverityHasSuffix applies the HasSuffix predicate on the "severity" field.
func SeverityHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldSeverity, v))
}

// SeverityEqualFold applies the EqualFold predicate on the "severity" field.
func SeverityEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldSeverity, v))
}

// SeverityContainsFold applies the ContainsFold predicate on the "severity" field.
func SeverityContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldSeverity, v))
}

// AbstractEnEQ applies the EQ predicate on the "abstract_en" field.
func AbstractEnEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldAbstractEn, v))
}

// AbstractEnNEQ applies the NEQ predicate on the "abstract_en" field.
func AbstractEnNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldAbstractEn, v))
}

// AbstractEnIn applies the In predicate on the "abstract_en" field.
func AbstractEnIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldAbstractEn, vs...))
}

// AbstractEnNotIn applies the NotIn predicate on the "abstract_en" field.
func AbstractEnNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldAbstractEn, vs...))
}

// AbstractEnGT applies the GT predicate on the "abstract_en" field.
func AbstractEnGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldAbstractEn, v))
}

// AbstractEnGTE applies the GTE predicate on the "abstract_en" field.
func AbstractEnGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldAbstractEn, v))
}

// AbstractEnLT applies the LT predicate on the "abstract_en" field.
func AbstractEnLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldAbstractEn, v))
}

// AbstractEnLTE applies the LTE predicate on the "abstract_en" field.
func AbstractEnLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldAbstractEn, v))
}

// AbstractEnContains applies the Contains predicate on the "abstract_en" field.
func AbstractEnContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldAbstractEn, v))
}

// AbstractEnHasPrefix applies the HasPrefix predicate on the "abstract_en" field.
func AbstractEnHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldAbstractEn, v))
}

// AbstractEnHasSuffix applies the HasSuffix predicate on the "abstract_en" field.
func AbstractEnHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldAbstractEn, v))
}

// AbstractEnEqualFold applies the EqualFold predicate on the "abstract_en" field.
func AbstractEnEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldAbstractEn, v))
}

// AbstractEnContainsFold applies the ContainsFold predicate on the "abstract_en" field.
func AbstractEnContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldAbstractEn, v))
}

// AbstractZhEQ applies the EQ predicate on the "abstract_zh" field.
func AbstractZhEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldAbstractZh, v))
}

// AbstractZhNEQ applies the NEQ predicate on the "abstract_zh" field.
func AbstractZhNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldAbstractZh, v))
}

// AbstractZhIn applies the In predicate on the "abstract_zh" field.
func AbstractZhIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldAbstractZh, vs...))
}

// AbstractZhNotIn applies the NotIn predicate on the "abstract_zh" field.
func AbstractZhNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldAbstractZh, vs...))
}

// AbstractZhGT applies the GT predicate on the "abstract_zh" field.
func AbstractZhGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldAbstractZh, v))
}

// AbstractZhGTE applies the GTE predicate on the "abstract_zh" field.
func AbstractZhGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldAbstractZh, v))
}

// AbstractZhLT applies the LT predicate on the "abstract_zh" field.
func AbstractZhLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldAbstractZh, v))
}

// AbstractZhLTE applies the LTE predicate on the "abstract_zh" field.
func AbstractZhLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldAbstractZh, v))
}

// AbstractZhContains applies the Contains predicate on the "abstract_zh" field.
func AbstractZhContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldAbstractZh, v))
}

// AbstractZhHasPrefix applies the HasPrefix predicate on the "abstract_zh" field.
func AbstractZhHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldAbstractZh, v))
}

// AbstractZhHasSuffix applies the HasSuffix predicate on the "abstract_zh" field.
func AbstractZhHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldAbstractZh, v))
}

// AbstractZhEqualFold applies the EqualFold predicate on the "abstract_zh" field.
func AbstractZhEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldAbstractZh, v))
}

// AbstractZhContainsFold applies the ContainsFold predicate on the "abstract_zh" field.
func AbstractZhContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldAbstractZh, v))
}

// CategoryEnEQ applies the EQ predicate on the "category_en" field.
func CategoryEnEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldCategoryEn, v))
}

// CategoryEnNEQ applies the NEQ predicate on the "category_en" field.
func CategoryEnNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldCategoryEn, v))
}

// CategoryEnIn applies the In predicate on the "category_en" field.
func CategoryEnIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldCategoryEn, vs...))
}

// CategoryEnNotIn applies the NotIn predicate on the "category_en" field.
func CategoryEnNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldCategoryEn, vs...))
}

// CategoryEnGT applies the GT predicate on the "category_en" field.
func CategoryEnGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldCategoryEn, v))
}

// CategoryEnGTE applies the GTE predicate on the "category_en" field.
func CategoryEnGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldCategoryEn, v))
}

// CategoryEnLT applies the LT predicate on the "category_en" field.
func CategoryEnLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldCategoryEn, v))
}

// CategoryEnLTE applies the LTE predicate on the "category_en" field.
func CategoryEnLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldCategoryEn, v))
}

// CategoryEnContains applies the Contains predicate on the "category_en" field.
func CategoryEnContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldCategoryEn, v))
}

// CategoryEnHasPrefix applies the HasPrefix predicate on the "category_en" field.
func CategoryEnHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldCategoryEn, v))
}

// CategoryEnHasSuffix applies the HasSuffix predicate on the "category_en" field.
func CategoryEnHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldCategoryEn, v))
}

// CategoryEnEqualFold applies the EqualFold predicate on the "category_en" field.
func CategoryEnEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldCategoryEn, v))
}

// CategoryEnContainsFold applies the ContainsFold predicate on the "category_en" field.
func CategoryEnContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldCategoryEn, v))
}

// CategoryZhEQ applies the EQ predicate on the "category_zh" field.
func CategoryZhEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldCategoryZh, v))
}

// CategoryZhNEQ applies the NEQ predicate on the "category_zh" field.
func CategoryZhNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldCategoryZh, v))
}

// CategoryZhIn applies the In predicate on the "category_zh" field.
func CategoryZhIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldCategoryZh, vs...))
}

// CategoryZhNotIn applies the NotIn predicate on the "category_zh" field.
func CategoryZhNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldCategoryZh, vs...))
}

// CategoryZhGT applies the GT predicate on the "category_zh" field.
func CategoryZhGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldCategoryZh, v))
}

// CategoryZhGTE applies the GTE predicate on the "category_zh" field.
func CategoryZhGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldCategoryZh, v))
}

// CategoryZhLT applies the LT predicate on the "category_zh" field.
func CategoryZhLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldCategoryZh, v))
}

// CategoryZhLTE applies the LTE predicate on the "category_zh" field.
func CategoryZhLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldCategoryZh, v))
}

// CategoryZhContains applies the Contains predicate on the "category_zh" field.
func CategoryZhContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldCategoryZh, v))
}

// CategoryZhHasPrefix applies the HasPrefix predicate on the "category_zh" field.
func CategoryZhHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldCategoryZh, v))
}

// CategoryZhHasSuffix applies the HasSuffix predicate on the "category_zh" field.
func CategoryZhHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldCategoryZh, v))
}

// CategoryZhEqualFold applies the EqualFold predicate on the "category_zh" field.
func CategoryZhEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldCategoryZh, v))
}

// CategoryZhContainsFold applies the ContainsFold predicate on the "category_zh" field.
func CategoryZhContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldCategoryZh, v))
}

// ConfidenceEQ applies the EQ predicate on the "confidence" field.
func ConfidenceEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldConfidence, v))
}

// ConfidenceNEQ applies the NEQ predicate on the "confidence" field.
func ConfidenceNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldConfidence, v))
}

// ConfidenceIn applies the In predicate on the "confidence" field.
func ConfidenceIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldConfidence, vs...))
}

// ConfidenceNotIn applies the NotIn predicate on the "confidence" field.
func ConfidenceNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldConfidence, vs...))
}

// ConfidenceGT applies the GT predicate on the "confidence" field.
func ConfidenceGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldConfidence, v))
}

// ConfidenceGTE applies the GTE predicate on the "confidence" field.
func ConfidenceGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldConfidence, v))
}

// ConfidenceLT applies the LT predicate on the "confidence" field.
func ConfidenceLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldConfidence, v))
}

// ConfidenceLTE applies the LTE predicate on the "confidence" field.
func ConfidenceLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldConfidence, v))
}

// ConfidenceContains applies the Contains predicate on the "confidence" field.
func ConfidenceContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldConfidence, v))
}

// ConfidenceHasPrefix applies the HasPrefix predicate on the "confidence" field.
func ConfidenceHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldConfidence, v))
}

// ConfidenceHasSuffix applies the HasSuffix predicate on the "confidence" field.
func ConfidenceHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldConfidence, v))
}

// ConfidenceEqualFold applies the EqualFold predicate on the "confidence" field.
func ConfidenceEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldConfidence, v))
}

// ConfidenceContainsFold applies the ContainsFold predicate on the "confidence" field.
func ConfidenceContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldConfidence, v))
}

// ImpactEQ applies the EQ predicate on the "impact" field.
func ImpactEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldImpact, v))
}

// ImpactNEQ applies the NEQ predicate on the "impact" field.
func ImpactNEQ(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldImpact, v))
}

// ImpactIn applies the In predicate on the "impact" field.
func ImpactIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldImpact, vs...))
}

// ImpactNotIn applies the NotIn predicate on the "impact" field.
func ImpactNotIn(vs ...string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldImpact, vs...))
}

// ImpactGT applies the GT predicate on the "impact" field.
func ImpactGT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldImpact, v))
}

// ImpactGTE applies the GTE predicate on the "impact" field.
func ImpactGTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldImpact, v))
}

// ImpactLT applies the LT predicate on the "impact" field.
func ImpactLT(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldImpact, v))
}

// ImpactLTE applies the LTE predicate on the "impact" field.
func ImpactLTE(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldImpact, v))
}

// ImpactContains applies the Contains predicate on the "impact" field.
func ImpactContains(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContains(FieldImpact, v))
}

// ImpactHasPrefix applies the HasPrefix predicate on the "impact" field.
func ImpactHasPrefix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasPrefix(FieldImpact, v))
}

// ImpactHasSuffix applies the HasSuffix predicate on the "impact" field.
func ImpactHasSuffix(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldHasSuffix(FieldImpact, v))
}

// ImpactEqualFold applies the EqualFold predicate on the "impact" field.
func ImpactEqualFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEqualFold(FieldImpact, v))
}

// ImpactContainsFold applies the ContainsFold predicate on the "impact" field.
func ImpactContainsFold(v string) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldContainsFold(FieldImpact, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.FieldLTE(FieldCreatedAt, v))
}

// HasSecurityScanning applies the HasEdge predicate on the "security_scanning" edge.
func HasSecurityScanning() predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, SecurityScanningTable, SecurityScanningColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSecurityScanningWith applies the HasEdge predicate on the "security_scanning" edge with a given conditions (other predicates).
func HasSecurityScanningWith(preds ...predicate.SecurityScanning) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(func(s *sql.Selector) {
		step := newSecurityScanningStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SecurityScanningResult) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SecurityScanningResult) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SecurityScanningResult) predicate.SecurityScanningResult {
	return predicate.SecurityScanningResult(sql.NotPredicates(p))
}
